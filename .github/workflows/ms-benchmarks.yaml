name: Moonshot CICD

on:
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
  workflow_dispatch:
      inputs:
        branch_to_test:
          description: 'Branch or tag to run test'
          required: true
          default: 'main'
          type: string

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  run-moonshot:
    runs-on: ubuntu-latest
    container:
      image: python:3.11

    steps:
      - name: Set branch variable
        run: |
          echo "event_name=${{ github.event_name }}"
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "BRANCH=${{ inputs.branch_to_test }}" >> $GITHUB_ENV
          else
            echo "BRANCH=main" >> $GITHUB_ENV
          fi

      - name: Checkout forked moonshot-data
        uses: actions/checkout@v3
        with:
          path: moonshot-data
          ref: ${{ env.BRANCH }}

      - name: Setup moonshot
        run: |
          chmod +x moonshot-data/.ci/setup_ms_script.sh
          bash moonshot-data/.ci/setup_ms_script.sh
          pip install -r moonshot-data/requirements.txt

      - name: Run moonshot
        run: |
          chmod +x moonshot-data/.ci/run_ms_script.sh
          bash moonshot-data/.ci/run_ms_script.sh
        env:
          COOKBOOK_RUN_NAME: testcookbookrun-${{ github.run_id }}
          MOONSHOT_RUN_COOKBOOKS_LIST: |
            ${{ vars.COOKBOOK_RUN }}
          MOONSHOT_UPDATE_ENDPOINTS_LIST: |
            ${{ secrets.AZURE_OPENAI_4O_UPDATE_ENDPOINT }};${{ secrets.TOGETHER_LLAMA3_8B_CHAT_UPDATE_ENDPOINT }};${{ secrets.TOGETHER_LLAMA_GUARD_7B_UPDATE_ENDPOINT }}

      - name: Display results
        run: |
          ls -al
          ls -al moonshot-data
          ls -al moonshot-data/generated-outputs/results/
          chmod +x moonshot-data/.ci/display_ms_script.sh
          bash moonshot-data/.ci/display_ms_script.sh
        env:
          COOKBOOK_RUN_NAME: testcookbookrun-${{ github.run_id }}

      - name: Commit results
        run: |
          # Configure git user for committing changes
          git pull origin ${{ env.BRANCH }}
          cd moonshot-data
          git config --global user.email "ci@example.com"
          git config --global user.name "CI Bot"
          # Add generated output files to the commit
          git config --global --add safe.directory $(pwd)
          git add -f ./generated-outputs/*
          # Show git status
          git status
          # Commit the changes with a message including the pipeline ID
          git commit -m "Update generated files [ci skip] - Pipeline ID ($GITHUB_RUN_ID)"
          # Push the changes to the repository, skipping CI for this push
          git push -o ci.skip
        env:
          GITHUB_RUN_ID: ${{ github.run_id }}